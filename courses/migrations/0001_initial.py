# Generated by Django 3.1 on 2022-03-03 07:38

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('video_sequence', models.PositiveIntegerField(blank=True, null=True)),
                ('learning_outcome', models.CharField(blank=True, max_length=30, null=True)),
                ('content_type', models.CharField(choices=[('PDF', 'PDF'), ('Video', 'Video')], max_length=30)),
                ('content_title', models.CharField(blank=True, max_length=90, null=True)),
                ('content_file', models.FileField(blank=True, null=True, upload_to='video/course_content')),
                ('level', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Publish', 'Publish'), ('Unpublish', 'Unpublish')], max_length=30)),
                ('content_for', models.CharField(choices=[('Teacher', 'Teacher'), ('Student', 'Student'), ('All', 'All')], default='All', max_length=40)),
                ('content_available_as', models.CharField(choices=[('Free', 'Free'), ('Paid', 'Paid')], default='Free', max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('thumbnail_image', models.FileField(blank=True, null=True, upload_to='image/course_thumbnail')),
                ('video_duration', models.CharField(default='', max_length=20)),
                ('video_paused_time', models.CharField(default='', max_length=20)),
            ],
            options={
                'db_table': 'content',
                'ordering': ['video_sequence'],
            },
        ),
        migrations.CreateModel(
            name='ContentQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('question', models.TextField()),
                ('answer', models.CharField(max_length=200)),
                ('quiz_time_in_seconds', models.PositiveIntegerField()),
                ('content_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_questions', to='courses.content')),
            ],
            options={
                'db_table': 'content_question',
            },
        ),
        migrations.CreateModel(
            name='LearningOutcome',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('learning_outcome', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'learning_outcome',
            },
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('standard_name', models.CharField(max_length=100, unique=True)),
                ('price', models.FloatField(default=0)),
            ],
            options={
                'db_table': 'standard',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('subject_name', models.CharField(max_length=50)),
                ('subject_image', models.FileField(blank=True, null=True, upload_to='image/course_subject')),
                ('standard_id', models.ForeignKey(db_column='standard_id', on_delete=django.db.models.deletion.CASCADE, related_name='standard_subjects', to='courses.standard')),
            ],
            options={
                'db_table': 'subject',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('topic_name', models.CharField(max_length=30)),
                ('subject_id', models.ForeignKey(db_column='subject_id', on_delete=django.db.models.deletion.CASCADE, related_name='subject', to='courses.subject')),
            ],
            options={
                'db_table': 'topic',
            },
        ),
        migrations.CreateModel(
            name='SubTopic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('sub_topic_name', models.CharField(max_length=50)),
                ('topic_id', models.ForeignKey(db_column='topic_id', on_delete=django.db.models.deletion.CASCADE, related_name='topic_subtopic', to='courses.topic')),
            ],
            options={
                'db_table': 'sub_topic',
            },
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='image/options')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='courses.contentquestion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LearningOutcomeScore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('score', models.FloatField()),
                ('learning_outcome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lc_score', to='courses.learningoutcome')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_score', to='user.person')),
            ],
            options={
                'db_table': 'learning_outcome_score',
            },
        ),
        migrations.AddField(
            model_name='content',
            name='standard_id',
            field=models.ForeignKey(blank=True, db_column='standard_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='content_standard', to='courses.standard'),
        ),
        migrations.AddField(
            model_name='content',
            name='sub_topic_id',
            field=models.ForeignKey(blank=True, db_column='sub_topic_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='content_sub_topic', to='courses.subtopic'),
        ),
        migrations.AddField(
            model_name='content',
            name='subject_id',
            field=models.ForeignKey(blank=True, db_column='subject_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='content_subject', to='courses.subject'),
        ),
        migrations.AddField(
            model_name='content',
            name='topic_id',
            field=models.ForeignKey(blank=True, db_column='topic_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='content_topic', to='courses.topic'),
        ),
    ]
